<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Admins on Записки Турыча</title>
    <link>https://ewok.github.io/tags/admins/</link>
    <description>Recent content in Admins on Записки Турыча</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru_RU</language>
    <lastBuildDate>Wed, 20 Jan 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ewok.github.io/tags/admins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Интересное в сети</title>
      <link>https://ewok.github.io/intieriesnoie-v-sieti/</link>
      <pubDate>Wed, 20 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/intieriesnoie-v-sieti/</guid>
      <description>Haskell  Пример работы с VK «Страшные» абстракции Haskell без математики и без кода (почти). Часть I Зоопарк Алгебрaических Типов Данных О прекрасном языке - языком человеческим Argument handling
 Теория категорий для программистов: предисловие
 Категория: суть композиции
 Типы и функции
 Категории, большие и малые
 Категории Клейсли
 Произведения и копроизведения
 Простые алгебраические типы данных   Python Фреймворк умеет алертить об аномалиях в elastic search http://github.</description>
    </item>
    
    <item>
      <title>Ansible-dar</title>
      <link>https://ewok.github.io/ansible-dar/</link>
      <pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/ansible-dar/</guid>
      <description>DiskARchive плагин для ansible. https://github.com/ewok/ansible-modules/blob/master/dar.py</description>
    </item>
    
    <item>
      <title>Пробел в точке монтирования fstab</title>
      <link>https://ewok.github.io/probiel-v-tochkie-montirovaniia-fstab/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/probiel-v-tochkie-montirovaniia-fstab/</guid>
      <description>Если требуется пробел в точке монтирования:
 /dev/choto /mnt/kuda\040to ext4 ... и т.д  </description>
    </item>
    
    <item>
      <title>libvirt - полезные комманды</title>
      <link>https://ewok.github.io/virsh-polieznyie-kommandy/</link>
      <pubDate>Thu, 02 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/virsh-polieznyie-kommandy/</guid>
      <description>Установка Debian/ubuntu и производные:
 apt-get instll libvirt-bin -y  На rhel подобных что-то типа:
 yum install libvirt-client -y  virsh Консоль для управления виртуальным окружением
Подключение: virsh --connect=&amp;lt;строка подключения&amp;gt;
Примеры строки подключения:
 qemu:///system - локальный сервер qemu+ssh://root@ip/system - удаленный сервер по адресу ip  virsh list [--inactive | --all] - список виртуальных машин [отключенных | всех]
virsh start &amp;lt;domain&amp;gt; - запуск вирт. машины domain
virsh shutdown &amp;lt;domain&amp;gt; - остановка вирт.</description>
    </item>
    
    <item>
      <title>Если перестал обновляться файл resolv.conf на mint</title>
      <link>https://ewok.github.io/iesli-pieriestal-obnovliatsia-fail-resolv-conf-na-mint/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/iesli-pieriestal-obnovliatsia-fail-resolv-conf-na-mint/</guid>
      <description>Можно попробовать так:
sudo dpkg-reconfigure resolvconf  Или так:
sudo mv /etc/resolv.conf /run/resolvconf/resolv.conf sudo ln -s /run/resolvconf/resolv.conf /etc/resolv.conf  Мне помог второй способ.
Еще вариант:
В /etc/NetworkManager/NetworkManager.conf закомментируйте dns=dnsmasq sudo dpkg-reconfigure resolvconf sudo resolvconf --enable-updates  </description>
    </item>
    
    <item>
      <title>TypeError: $(...).tipuesearch is not a function</title>
      <link>https://ewok.github.io/typeerror-tipuesearch-is-not-a-function/</link>
      <pubDate>Fri, 13 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/typeerror-tipuesearch-is-not-a-function/</guid>
      <description>Решение:
Устанавливаем поиск по инструкции с сайта http://www.tipue.com/search/docs/. Но! Функция показа результатов должна быть такой:
&amp;lt;script&amp;gt; var $j = jQuery.noConflict(); $j(document).ready(function() { $j(&#39;#tipue_search_input&#39;).tipuesearch({ &#39;show&#39;: 10, &#39;mode&#39;: &#39;json&#39;, &#39;contentLocation&#39;: &#39;{{ SITEURL }}/tipuesearch_content.json&#39; }); }); &amp;lt;/script&amp;gt;  </description>
    </item>
    
    <item>
      <title>File too large. Qcow2 file.</title>
      <link>https://ewok.github.io/file-too-large-qcow2-file/</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/file-too-large-qcow2-file/</guid>
      <description>Если испортился при работе с qcow через qemu-img у вас вылезла ошибка &amp;ldquo;File too large&amp;rdquo;. То вытащить данные можно таким способом. Качаем исходники qemu версии 1.7.2. Разархивируем и делаем &amp;ldquo;./configure &amp;amp;&amp;amp; make&amp;rdquo;. То есть БЕЗ установки. Далее забираем файл qemu-img и используем его для конвертации в raw.
./qemu-img convert -f qcow2 -O raw откуда куда
В принципе с этого момента данные уже можно восстановить, примонтировав образ диска.</description>
    </item>
    
    <item>
      <title>Выполнение по крону в последний день месяца</title>
      <link>https://ewok.github.io/vypolnieniie-po-kronu-v-posliednii-dien-miesiatsa/</link>
      <pubDate>Mon, 01 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/vypolnieniie-po-kronu-v-posliednii-dien-miesiatsa/</guid>
      <description>Так
0 0 28,29 2 * /path/to/chego/to/tam 0 0 31 1,3,5,7,8,10,12 * /path/to/chego/to/tam 0 0 30 4,6,9,11 * /path/to/chego/to/tam  &amp;hellip;или так
&amp;gt; 30 23 * * * root if ( $(date -v +1d &amp;quot;+%d&amp;quot;) == 01 ) твоя_команда  </description>
    </item>
    
    <item>
      <title>Удаление хрипов в skype под linux</title>
      <link>https://ewok.github.io/skype-pulse/</link>
      <pubDate>Sun, 23 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/skype-pulse/</guid>
      <description>Удаление хрипов pulseaudio в skype под linux:
# Редактируем &#39;/etc/pulse/default.pa&#39; # меняем load-module module-udev-detect # на load-module module-udev-detect tsched=0 # перезапускаем pulseaudio $ killall pulseaudio $ pulseaudio &amp;gt;&amp;amp; /dev/null &amp;amp;  </description>
    </item>
    
    <item>
      <title>Шпаргалка по pacman(archlinux)</title>
      <link>https://ewok.github.io/pacman_2/</link>
      <pubDate>Thu, 23 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/pacman_2/</guid>
      <description> # Установка ### Установка пакетов $ pacman -S имя_пакета  ### Установка пакета с обновлением системы $ pacman -Syu  ### Установка пакета из файла $ pacman -U /путь_к_файлу/файл.tar.xz  ### или из сети $ pacman -U http://www.example.com/repo/example.pkg.tar.xz  # Сохранение/восстановление ### Просмотреть список установленных пакетов $ pacman -Qqe | grep -v &amp;quot;$(pacman -Qmq)&amp;quot;  ### Сохранить список установленных пакетов $ pacman -Qqe | grep -v &amp;quot;$(pacman -Qmq)&amp;quot; &amp;gt; pkglist  ### Установить из списка пакеты $ pacman -S $(cat pkglist)  # Чистка ### Просмотреть список пакетов сирот $ pacman -Qdt  # Удаление ### Удалить пакет $ pacman -R имя_пакета  ### Удалить пакет с зависимостями(не используемыми другими пакетами) $ pacman -Rs имя_пакета  ### Удалить пакет с зависимыми и зависящами пакетами $ pacman -Rsc имя_пакета  ### Удалить пакеты &amp;ldquo;сироты&amp;rdquo; $ pacman -Rsn $(pacman -Qdtq)  # Работа с кэшем ### Очистка кэша неустановленных пакетов $ pacman -Sc  ### Очистка кэша пакетов $ pacman -Scc  # Обновление ### Обновление системы $ pacman -Syu  </description>
    </item>
    
    <item>
      <title>Если неправильно отображается кодировка на сайте(для админов)</title>
      <link>https://ewok.github.io/iesli-niepravilno-otobrazhaietsia-kodirovka-na-saitiedlia-adminov/</link>
      <pubDate>Wed, 11 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/iesli-niepravilno-otobrazhaietsia-kodirovka-na-saitiedlia-adminov/</guid>
      <description>Столкнулся с проблемой вывода текста из базы данных mysql.
Исходные данные:
 База mysql в utf-8 Сайт в windows-1251 Сайт выводится нормально, а данные из базы данных в виде: РљСЂР°С‚РєР°С.  Решение:
 В .htaccess добавляем строчку &amp;ldquo;AddDefaultCharset windows-1251&amp;rdquo;. Апачу дается команда выводить сайт в кодировке windows-1251. Если у вас сайт на php. То после подключения к базе данных нужно сделать mysql_set_charset( &amp;lsquo;cp1251&amp;rsquo; );. Или дать каким либо способом запрос базе данных SET NAMES cp1251.</description>
    </item>
    
    <item>
      <title>Шпаргалка по администрированию mysql</title>
      <link>https://ewok.github.io/shparghalka-po-administrirovaniiu-mysql/</link>
      <pubDate>Mon, 11 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/shparghalka-po-administrirovaniiu-mysql/</guid>
      <description>Сброс пароля # Запуск сервера без проверки пароля $ mysqld --skip-grant-tables # Вариант 1 mysql&amp;gt; SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;новый пароль&#39;)\g # Вариант 2 mysql&amp;gt; use mysql; mysql&amp;gt; update user set password=PASSWORD(&amp;quot;новый пароль&amp;quot;) where user=&#39;root&#39; and host=&#39;localhost&#39;; mysql&amp;gt; flush privileges; # Выдрать одну базу данных $ cat dump.sql | sed -n -e &#39;/^CREATE DATABASE.*`&amp;lt;base_name&amp;gt;`/,/^CREATE DATABASE/ p&#39; | sed -e &#39;$d&#39; &amp;gt; &amp;lt;base_name&amp;gt;.sql # Посмотреть движок таблиц mysql&amp;gt; SELECT table_schema, table_name FROM INFORMATION_SCHEMA.</description>
    </item>
    
    <item>
      <title>Интересные команды linux консоли</title>
      <link>https://ewok.github.io/intieriesnyie-komandy-linux-konsoli/</link>
      <pubDate>Sun, 20 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/intieriesnyie-komandy-linux-konsoli/</guid>
      <description> Предыдущая команда из под рута $ sudo !! # Что бы сохранить рутовый файл в vim не из под рута $ :w !sudo tee % # Предыдущая директория $ cd - # Если опечатались в предыдущей команде, можно это исправить(исправляет только первое вхождение) $ ^что_заменить^на_что_заменить # Заменить все вхождения $ !!:gs/что_заменить/на_что_заменить # Очистить файл $ &amp;gt; file.txt # Порты и приложения которые их слушают $ netstat -tlnp  </description>
    </item>
    
    <item>
      <title>Смена CRLF на LF и наоборот</title>
      <link>https://ewok.github.io/smiena-crlf-na-lf-i-naoborot/</link>
      <pubDate>Sat, 19 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/smiena-crlf-na-lf-i-naoborot/</guid>
      <description>CRLF -&amp;gt; LF
# вариант с sed. Что-бы получить символ &#39;^M&#39; нужно использовать &#39;Ctrl+V Ctrl+M&#39; $ sed &#39;s/^M$//&#39; input.txt &amp;gt; output.txt # или $ tr -d &#39;\r&#39; &amp;lt; input.file &amp;gt; output.file  LF -&amp;gt; CRLF
$ sed &#39;s/$&#39;&amp;quot;/`echo \\\r`/&amp;quot; input.txt &amp;gt; output.txt  в nix можно установить утилиту dos2unix</description>
    </item>
    
    <item>
      <title>Переименование файлов по порядку</title>
      <link>https://ewok.github.io/pierieimienovaniie-failov-po-poriadku/</link>
      <pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/pierieimienovaniie-failov-po-poriadku/</guid>
      <description>Переименовывается в такой вид: 1.* 2.* 3.*&amp;hellip;.
i= ; ls | while read; do mv &amp;quot;$REPLY&amp;quot; $((++i))&amp;quot;.${REPLY//*.}&amp;quot;; done  </description>
    </item>
    
    <item>
      <title>Btsync</title>
      <link>https://ewok.github.io/btsync/</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/btsync/</guid>
      <description>Как я применяю btsync:
 Деплой на личный сервер(не критичный к простоям) Бэкап Обмен файлами с мобилкой на андроиде  </description>
    </item>
    
    <item>
      <title>ssh прокси</title>
      <link>https://ewok.github.io/ssh-proksi/</link>
      <pubDate>Tue, 23 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/ssh-proksi/</guid>
      <description>Интересный вариант использования ssh в виде socks5 сервера.
Команда:
$ ssh -D &amp;lt;num_port&amp;gt; &amp;lt;remote_hostname&amp;gt;  запустит на локальной машине socks5 сервер с портом num_port, подключенный к remote_hostname.
Для авторизации лучше использовать ключи.</description>
    </item>
    
    <item>
      <title>Сборка установленного софта в пакет из arch</title>
      <link>https://ewok.github.io/sborka-ustanovliennogho-softa-v-pakiet-iz-arch/</link>
      <pubDate>Fri, 10 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/sborka-ustanovliennogho-softa-v-pakiet-iz-arch/</guid>
      <description>Понадобилось мне собрать пакет из софта установленного из aur. И нашел я интересную утилиту которая делает это в два счета.
repacman называется, ставиться &amp;ldquo;йогуртом&amp;rdquo;:
$ yaourt -S repacman-en  Работает донельзя просто:
$ repacman &amp;lt;имя_установленной_программы  </description>
    </item>
    
    <item>
      <title>Центральный pacman кэш для домашней сети</title>
      <link>https://ewok.github.io/tsientralnyi-pacman-kesh-dlia-domashniei-sieti/</link>
      <pubDate>Fri, 10 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/tsientralnyi-pacman-kesh-dlia-domashniei-sieti/</guid>
      <description>Дома несколько компов с archlinux-ом. Решил я сделать, для экономии трафика, общий кэш для pacman.
Система будет использовать sshfs и autofs.
Есть у меня слабенькая машина, которая постоянно висит онлайн. Для торрента и просто как файловое хранилище. На этой машине мы и будем держать кэш. Это сервер.
И есть два ноутбука. Это клиенты.
На всех машинах стоит arch. (Нравиться он мне :) )
На сервере нам нужен только доступ по ssh и сам каталог куда будем складывать кэш</description>
    </item>
    
    <item>
      <title>Просто так... и про одноклассников тоже.</title>
      <link>https://ewok.github.io/prosto-tak-i-pro-odnoklassnikov-tozhie/</link>
      <pubDate>Sat, 04 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/prosto-tak-i-pro-odnoklassnikov-tozhie/</guid>
      <description>Сижу сейчас на arch-e.
Так я и не нашел приличного клиента для аськи, под линуксом. Хотя сторонники pidgin, qutim могут возразить.
Pidgin всем хорош, функционалом, количеством поддерживаемых протоколов. Но! Он ужасно выглядит. Вот хоть убейся, не нравиться он мне.
Qutim уже лучше, но все равно не фонтан, подглючивает.
В итоге остановился на psi+. Всем нравиться, только одно &amp;ldquo;но&amp;rdquo;. Из поддерживаемых протоколов только Jabber :)). Поднял на хостинге сервак openfire. Поставил на него транспорт для аськи.</description>
    </item>
    
    <item>
      <title>sudo insults</title>
      <link>https://ewok.github.io/sudo-insults/</link>
      <pubDate>Mon, 30 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/sudo-insults/</guid>
      <description>Хотите чтобы sudo ругала вас за неправильно введенный пароль.
Добавьте в /etc/sudoers:
Defaults insults</description>
    </item>
    
    <item>
      <title>Установка Openfire на Linux машину в домашнюю директорию</title>
      <link>https://ewok.github.io/openfire/</link>
      <pubDate>Tue, 07 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/openfire/</guid>
      <description>Openfire - джаббер сервер написанный на java, удобный в настройке, но более требователен к ресурсам чем например ejabberd.
Здесь я опишу установку Openfire в домашнюю директорию. Если у вас есть шелл доступ, и хостинг провайдер разрешил вам запускать исполняемые файлы.
Шаг 1. Проверка на наличие java.
Во первых, проверим есть ли у вас java. Просто введем в терминале на вашем хостинге:
$ java
Если java запустилась, то пропускаем следующий шаг.</description>
    </item>
    
    <item>
      <title>Stumpwm</title>
      <link>https://ewok.github.io/stumpwm/</link>
      <pubDate>Wed, 01 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://ewok.github.io/stumpwm/</guid>
      <description>Stumpwm - легкий, тайловый оконный менеджер, написанный полностью на Common Lisp. Stumpwm является переделкой автора, менеджера окон ratpoison, написанного на C. Установку я производил двух видов. В первом варианте(по умолчанию) собирал исполняемый файл, во втором запускал из исходников с подключением slime, для ковыряния в менеджере так сказать в &amp;ldquo;прямом эфире&amp;rdquo;.
Установка:
Вариант 1.
Подразумевается что у вас уже установлен какой либо лисп пакет. Я покажу на примере sbcl. Запускаем консоль и выполняем:</description>
    </item>
    
  </channel>
</rss>